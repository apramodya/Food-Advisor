## Food Finder main-branch workflow


workflows:
    ios-app:
        name: iOS App
        environment:
            vars:
                XCODE_WORKSPACE: "Food Advisor.xcworkspace"
                XCODE_SCHEME: "Food Advisor"
                DEV_CERTIFICATE: Encrypted()
                DEV_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmY1S1VvRG8zRnZqR3BjTmlGemNrMDdpSjljOHhrTlNnbHV2WjNIVkhtY21ZSU5jTS1wZElLcm03eWNESEFVVHFtck5meTVMS0EtMG1YX085WGk4UmIwLVdfYlE9PQ==)
            xcode: latest
            cocoapods: default
        cache:
            cache_paths:
              - $HOME/Library/Caches/CocoaPods
        triggering:
          events:
            - push
          branch_patterns:
            - pattern: '*main*'
              include: true
              source: true
          cancel_previous_builds: false
        scripts:
            - name: Install cocoapods
              script: pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: keychain initialize
            - name: Set up development certificate
              script: |
                echo $DEV_CERTIFICATE | base64 --decode > /tmp/dev_certificate.p12
                keychain add-certificates --certificate /tmp/dev_certificate.p12 --certificate-password $DEV_CERTIFICATE_PASSWORD
            - name: Set up code signing settings on Xcode project
              script: xcode-project use-profiles
            - name: Make an archive
              script: xcodebuild archive -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME" -archivePath unsigned.xcarchive -configuration Release
        artifacts:
            - $HOME/Library/Developer/Xcode/Archives/**/*.xcarchive
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

